apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-cache-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-cache-server-pod
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-cache-server-pod
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/cache-server/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/cache-server/secret.yaml") . | sha256sum }}
    spec:
      securityContext:
        runAsUser: 999
        runAsGroup: 999
      containers:
        - name: {{ .Release.Name }}-cache-server-container
          image: "{{ .Values.image.cacheServer.registryPath }}redis:{{ .Values.image.cacheServer.tag }}"
          imagePullPolicy: {{ .Values.image.cacheServer.imagePullPolicy }}
          command: ["redis-server"]
          args: [
            "--requirepass", "$(REDIS_PASSWORD)",
            "--maxmemory", "$(REDIS_MEMORY_MAX)",
            "--maxmemory-policy", "volatile-lru",
            "--save", '""',
            "--appendonly", "no"
          ]
          ports:
            - name: http-container
              containerPort: 6379
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-cache-server-secret
                  key: REDIS_PASSWORD
            - name: REDIS_MEMORY_MAX
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-cache-server-config
                  key: REDIS_MEMORY_MAX

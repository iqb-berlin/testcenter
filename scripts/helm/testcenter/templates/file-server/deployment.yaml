{{- if .Values.config.backend.fileServerEnabled }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-file-server
spec:
  replicas: {{ .Values.deployment.fileServer.replicas }}
  {{- if .Values.deployment.fileServer.strategy }}
  strategy:
    {{- .Values.deployment.fileServer.strategy | toYaml | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-file-server-pod
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/file-server/configmap.yaml") . | sha256sum }}
        checksum/config-nginx: {{ include (print $.Template.BasePath "/file-server/configmap-nginx.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/file-server/secret.yaml") . | sha256sum }}
      labels:
        app: {{ .Release.Name }}-file-server-pod
    spec:
      {{- if .Values.deployment.fileServer.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- .Values.deployment.fileServer.topologySpreadConstraints | toYaml | nindent 8 }}
      {{- end }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 2000
        fsGroup: 3000
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: {{ .Release.Name }}-file-server-container
          image: "{{ .Values.image.fileServer.registryPath }}iqbberlin/testcenter-file-server:{{ .Values.image.fileServer.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.fileServer.imagePullPolicy }}
          securityContext:
            runAsUser: 33
            runAsGroup: 33
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          {{- if .Values.deployment.fileServer.resources }}
          resources:
            {{- .Values.deployment.fileServer.resources | toYaml | nindent 12 }}
          {{- end }}
          ports:
            - name: http-container
              containerPort: 8080
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: {{ .Values.deployment.fileServer.probes.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.deployment.fileServer.probes.liveness.periodSeconds }}
            timeoutSeconds: {{ .Values.deployment.fileServer.probes.liveness.timeoutSeconds }}
            successThreshold: {{ .Values.deployment.fileServer.probes.liveness.successThreshold }}
            failureThreshold: {{ .Values.deployment.fileServer.probes.liveness.failureThreshold }}
          readinessProbe:
            httpGet:
              path: /health #todo find better endpoint
              port: 8080
            periodSeconds: {{ .Values.deployment.fileServer.probes.readiness.periodSeconds }}
            timeoutSeconds: {{ .Values.deployment.fileServer.probes.readiness.timeoutSeconds }}
            successThreshold: {{ .Values.deployment.fileServer.probes.readiness.successThreshold }}
            failureThreshold: {{ .Values.deployment.fileServer.probes.readiness.failureThreshold }}
          env:
            - name: REDIS_HOST
              value: "{{ .Release.Name }}-cache-server.tc.svc.cluster.local"
            - name: REDIS_PORT
              value: "6379"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-file-server-secret
                  key: REDIS_PASSWORD
            - name: REDIS_CACHE_FILES
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-file-server-config
                  key: REDIS_CACHE_FILES
          volumeMounts:
            - name: backend-volume
              mountPath: /var/www/testcenter/data
            - name: nginx-config-volume
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf-in-volume
      volumes:
        - name: backend-volume
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-backend-pvc
        - name: nginx-config-volume
          configMap:
            name: file-server-nginx-config
            items:
              - key: config.nginx.conf
                path: nginx.conf-in-volume

{{- end }}
